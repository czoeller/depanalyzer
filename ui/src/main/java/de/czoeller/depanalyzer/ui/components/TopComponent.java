package de.czoeller.depanalyzer.ui.components;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import de.czoeller.depanalyzer.ui.model.UIModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

import javax.swing.*;
import java.awt.*;

public class TopComponent {
    private final UIModel model;
    private JTextField searchTextField;
    private JLabel searchLabel;
    private JComboBox analyzerResultComboBox;
    private JComboBox layoutComboBox;
    private JPanel rootPanel;

    public TopComponent(UIModel model) {
        this.model = model;
        $$$setupUI$$$();

        layoutComboBox.addActionListener(a -> model.setSelectedLayout(model.getLayoutModel()
                                                                           .getElementAt(layoutComboBox.getSelectedIndex())));
        analyzerResultComboBox.addActionListener(a -> model.setSelectedAnalyzer(model.getAnalyzerModel()
                                                                                     .getElementAt(analyzerResultComboBox.getSelectedIndex())));
        AutoCompleteDecorator.decorate(searchTextField, model.getAvailableNodeNames(), false);
        AutoCompleteDecorator.decorate(layoutComboBox);
        searchTextField.addActionListener(e -> {
            String searchText = searchTextField.getText();
            model.setSearch(searchText);
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        searchTextField = new JTextField();
        rootPanel.add(searchTextField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        searchLabel = new JLabel();
        searchLabel.setText("Search:");
        rootPanel.add(searchLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Analyzer Result:");
        rootPanel.add(label1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        rootPanel.add(analyzerResultComboBox, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Layout:");
        rootPanel.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        rootPanel.add(layoutComboBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        searchLabel.setLabelFor(searchTextField);
        label1.setLabelFor(analyzerResultComboBox);
        label2.setLabelFor(layoutComboBox);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        layoutComboBox = new JComboBox<>(model.getLayoutModel());
        analyzerResultComboBox = new JComboBox<>(model.getAnalyzerModel());
    }
}
